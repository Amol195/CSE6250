{"paragraphs":[{"text":"%md ##Event Statistics using Scala","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739018_-715085167","id":"20170126-084346_411967885","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Event Statistics using Scala</h2>\n"},"dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2976"},{"title":"Event Statistics using Scala","text":"// any import statements go here\nimport org.apache.spark.rdd.RDD\nimport org.apache.commons.io.IOUtils\nimport java.text.SimpleDateFormat\nimport java.util.Date\nimport java.net.URL\nimport java.nio.charset.Charset\nimport org.apache.spark.sql._","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"title":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739018_-715085167","id":"20170125-092928_572765858","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2977","focus":true},{"title":"Then, load data. We uploaded the data on S3 for easier loading","text":"// load raw data\n\ndef loadFromUrl(url:String) = \n    sc.parallelize(\n        IOUtils.toString(\n            new URL(url),\n            Charset.forName(\"utf8\")).split(\"\\n\"))\n            \nval events = loadFromUrl(\"https://s3.amazonaws.com/6250bdh-hw/hw2/train/events.csv\")\nval mortality = loadFromUrl(\"https://s3.amazonaws.com/6250bdh-hw/hw2/train/mortality.csv\")\n","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739018_-715085167","id":"20170125-102007_1054430570","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2978","focus":true},{"text":"import java.util.Date\n// Define case class\ncase class Event(patientId: String, category: String, event: String, date: java.util.Date, value: Double)\ncase class Mortality(patientId: String, mortality_date:  java.util.Date, label: Double)\n","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739019_-715469916","id":"20170125-093656_1081259042","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2979","focus":true},{"text":"\n// Define date format\nval dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\")","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739019_-715469916","id":"20170205-182828_2037956217","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2980"},{"text":"\n// Load events & mortality into their corresponding RDD\nval eventsRDD: RDD[Event] = events.map(s=>s.split(\",\")).map(s=>Event(s(0), s(1), s(2),dateFormat.parse(s(3).asInstanceOf[String]), s(4).toDouble))\nval mortalityRDD: RDD[Mortality] = mortality.map(s=>s.split(\",\")).map(s=>Mortality(s(0), dateFormat.parse(s(1).asInstanceOf[String]), s(2).toDouble))","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739019_-715469916","id":"20170125-103206_1230836042","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2981"},{"title":"Event count is defined as the number of events recorded for a given patient","text":"def event_count_metrics(eve: RDD[(Event)], mor: RDD[(Mortality)]) : (Double, Double, Double, Double, Double, Double) = {\n    \n    // TODO : Implement this function to return the event count metrics.\n    val avg_dead_event_count = 0.0\n    val max_dead_event_count = 0.0\n    val min_dead_event_count = 0.0\n    val avg_alive_event_count = 0.0\n    val max_alive_event_count = 0.0\n    val min_alive_event_count = 0.0\n    \n    (avg_dead_event_count, max_dead_event_count, min_dead_event_count, avg_alive_event_count, max_alive_event_count, min_alive_event_count)\n}","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739019_-715469916","id":"20170125-163824_794924019","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2982"},{"title":"Encounter count is defined as the count of unique dates on which a given patient visited the ICU. ","text":"def encounter_count_metrics(eve: RDD[(Event)], mor: RDD[(Mortality)]) : (Double, Double, Double, Double, Double, Double) = {\n    \n    // TODO : Implement this function to return the encounter count metrics.\n    val avg_dead_encounter_count = 0.0\n    val max_dead_encounter_count = 0.0\n    val min_dead_encounter_count = 0.0\n    val avg_alive_encounter_count = 0.0\n    val max_alive_encounter_count = 0.0\n    val min_alive_encounter_count = 0.0\n    \n    (avg_dead_encounter_count, max_dead_encounter_count, min_dead_encounter_count, avg_alive_encounter_count, max_alive_encounter_count, min_alive_encounter_count)\n}","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739019_-715469916","id":"20170126-094037_1369751422","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2983"},{"title":"Testing Event Count - Don't change this cell","text":"\nval (avg_dead_event_count, max_dead_event_count, min_dead_event_count, avg_alive_event_count, max_alive_event_count, min_alive_event_count) = \nevent_count_metrics(eventsRDD, mortalityRDD)","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739019_-715469916","id":"20170125-164106_1373358169","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2984"},{"title":"Populate the correct values in df_events dataframe","text":"case class eventRecord(Average_Event: Double , Max_Event: Double, Min_Event: Double, Mortality: String) \nval df_events = Seq(eventRecord(50.0, 80.0, 20.0, \"Alive\"), eventRecord(100.0, 160.0, 60.0, \"Dead\")).toDF \n\n// TODO - Fill in the correct values of minimum, maximum and average events for Alive and Dead Patients \n//val df_events = Seq(eventRecord(0.0, 0.0, 0.0, \"Alive\"), eventRecord(0.0, 0.0, 0.0, \"Dead\")).toDF\ndf_events.registerTempTable(\"df_events\")\n","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739019_-715469916","id":"20170126-095056_275615884","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2985"},{"title":"Plot Event Count Grouped by Dead/Alive","text":"%sql\nselect * from df_events","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"title":true,"graph":{"mode":"table","height":300,"optionOpen":true,"keys":[{"name":"Max_Event","index":1,"aggr":"sum"},{"name":"Average_Event","index":0,"aggr":"sum"},{"name":"Min_Event","index":2,"aggr":"sum"}],"values":[{"name":"Max_Event","index":1,"aggr":"sum"},{"name":"Average_Event","index":0,"aggr":"sum"},{"name":"Min_Event","index":2,"aggr":"sum"}],"groups":[{"name":"Mortality","index":3,"aggr":"sum"}],"scatter":{"xAxis":{"name":"Average_Event","index":0,"aggr":"sum"},"yAxis":{"name":"Max_Event","index":1,"aggr":"sum"}}},"editorMode":"ace/mode/sql","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739019_-715469916","id":"20170127-103258_1100387642","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2986"},{"title":"Testing Encounter Count - Don't change any cell starting from this one","text":"val  (avg_dead_encounter_count, max_dead_encounter_count, min_dead_encounter_count, avg_alive_encounter_count, max_alive_encounter_count, min_alive_encounter_count) = encounter_count_metrics(eventsRDD, mortalityRDD)","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739020_-717393660","id":"20170126-085842_586212247","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2987"},{"title":"Populate the correct values in df_encounters dataframe","text":"case class encounterRecord(Average_Encounter: Double , Max_Encounter: Double, Min_Encounter: Double, Mortality: String)\n\nval df_encounter = Seq(encounterRecord(50.0, 80.0, 20.0, \"Alive\"), encounterRecord(100.0, 160.0, 60.0, \"Dead\")).toDF \n\n// TODO - Fill in the correct values of minimum, maximum and average events for Alive and Dead Patients \n//val df_encounter = Seq(encounterRecord(0.0, 0.0, 0.0, \"Alive\"), encounterRecord(0.0, 0.0, 0.0, \"Dead\")).toDF\ndf_encounter.registerTempTable(\"df_encounter\")\n","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739020_-717393660","id":"20170127-104258_320884595","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2988"},{"title":"Plot Encounter Count Grouped by Dead/Alive","text":"%sql\nselect * from df_encounter ","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"title":true,"graph":{"mode":"table","height":300,"optionOpen":true,"keys":[{"name":"Max_Encounter","index":1,"aggr":"sum"},{"name":"Average_Encounter","index":0,"aggr":"sum"},{"name":"Min_Encounter","index":2,"aggr":"sum"}],"values":[{"name":"Max_Encounter","index":1,"aggr":"sum"},{"name":"Average_Encounter","index":0,"aggr":"sum"},{"name":"Min_Encounter","index":2,"aggr":"sum"}],"groups":[{"name":"Mortality","index":3,"aggr":"sum"}],"scatter":{"xAxis":{"name":"Average_Encounter","index":0,"aggr":"sum"},"yAxis":{"name":"Max_Encounter","index":1,"aggr":"sum"}}},"editorMode":"ace/mode/sql","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739020_-717393660","id":"20170127-113147_1780103981","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2989"},{"text":"","dateUpdated":"2017-02-09T08:42:19-0500","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486647739020_-717393660","id":"20170127-113337_1396101507","dateCreated":"2017-02-09T08:42:19-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2990"}],"name":"BDH_HW2_Zeppelin","id":"2CA7W9XRG","angularObjects":{"2C28Q8BUF:shared_process":[],"2BZ1CKDFF:shared_process":[],"2BYZ1EGN9:shared_process":[],"2C286FDFF:shared_process":[],"2BZ2QUBQD:shared_process":[],"2BZFBAYGU:shared_process":[],"2BYDN2V1Q:shared_process":[],"2C18QNNJX:shared_process":[],"2BY36DHA1:shared_process":[],"2C17ZF8EF:shared_process":[],"2BZ49KMZ6:shared_process":[],"2BZX6TBAT:shared_process":[],"2BYR5Q114:shared_process":[],"2BYB111UT:shared_process":[],"2C1J7VE5P:shared_process":[],"2C28P3VX2:shared_process":[],"2C277W1H4:shared_process":[],"2BZXA4MX4:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}